{{- $name := .Release.Name -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ $name }}"
  labels:
    app: "{{ $name }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "{{ $name }}"
  template:
    metadata:
      labels:
        app: "{{ $name }}"
    spec:
      containers:
      - name: opa
        image: openpolicyagent/opa:0.54.0

        # WARNING: OPA is NOT running with an authorization policy configured. This
        # means that clients can read and write policies in OPA. If you are
        # deploying OPA in an insecure environment, be sure to configure
        # authentication and authorization on the daemon. See the Security page for
        # details: https://www.openpolicyagent.org/docs/security.html.
        ports:
        - name: http
          containerPort: {{ .Values.opa.port }}
        args:
        - "run"
        - "--ignore=.*"  # exclude hidden dirs created by Kubernetes
        - "--server"
        - "/policies"
        volumeMounts:
        - readOnly: true
          mountPath: /policies
          name: policy
        livenessProbe:
          httpGet:
            scheme: HTTP
            port: {{ .Values.opa.port }}
          initialDelaySeconds: 5
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /health?bundle=true  # Include bundle activation in readiness
            scheme: HTTP
            port: {{ .Values.opa.port }}
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
        - name: policy
          projected:
            sources:
              - secret:
                  name: "{{ .Release.Name }}-roles"
              - configMap:
                  name: "{{ .Release.Name }}-rbac"
